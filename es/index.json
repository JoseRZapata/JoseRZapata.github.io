[{"authors":["admin"],"categories":null,"content":"Soy Profesor Titular de la facultad de tecnologías de la información y comunicación (TIC), en la Universidad Pontificia Bolivariana (UPB) y investigador en GIDATIC\nMis intereses de investigación son en el área de Ciencia de Datos y tecnologías de la información en sonido y musica, que incluye temas como Music information retrieval, Aprendizaje de Maquina (Machine Learning), Análisis de audio y Análisis de datos.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"es","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://joserzapata.github.io/es/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/es/authors/admin/","section":"authors","summary":"Soy Profesor Titular de la facultad de tecnologías de la información y comunicación (TIC), en la Universidad Pontificia Bolivariana (UPB) y investigador en GIDATIC\nMis intereses de investigación son en el área de Ciencia de Datos y tecnologías de la información en sonido y musica, que incluye temas como Music information retrieval, Aprendizaje de Maquina (Machine Learning), Análisis de audio y Análisis de datos.","tags":null,"title":"Jose Ricardo Zapata","type":"authors"},{"authors":["Jose R. Zapata"],"categories":["Data-Science"],"content":"PySpark en Google Colab Automatico  Instalacion Marzo/2020 Intalacion Automatica  Instalacion Java Instalacion de Spark Ejemplo de Uso de pyspark    \nInstalacion Rapida Marzo/ 2020 De forma General para usar pyspark en Colab Marzo/2020 seria con los siguientes comandos en una celda en Colab:\nInstalar Java\n!apt-get install openjdk-8-jdk-headless -qq \u0026gt; /dev/null import os # libreria de manejo del sistema operativo os.system(\u0026#34;wget -q https://www-us.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz\u0026#34;) os.system(\u0026#34;tar xf /spark-2.4.5-bin-hadoop2.7.tgz\u0026#34;) instalar pyspark\n!pip install -q pyspark # Variables de Entorno os.environ[\u0026#34;JAVA_HOME\u0026#34;] = \u0026#34;/usr/lib/jvm/java-8-openjdk-amd64\u0026#34; os.environ[\u0026#34;SPARK_HOME\u0026#34;] = f\u0026#34;/content/{ver_spark}-bin-hadoop2.7\u0026#34; # Cargar Pyspark from pyspark.sql import SparkSession spark = SparkSession.builder.appName(\u0026#34;Test_spark\u0026#34;).master(\u0026#34;local[*]\u0026#34;).getOrCreate() spark Pero cuando salga una nueva version de spark sera necesario actualizar los links de descarga, ya que siempre borran las versiones 2.x.x cuando sale una nueva.\nLo mejor es configurar automaticamente para que descargue la version que sea mayor que 2.3.4 que es la anterior y menor que spark 3.0.0 que aun se encuentra en desarrollo\nPara esto el siguiente codigo detecta la version actual de spark, la descarga, la descomprime y luego realiza la instalacion de spark en google colab.\nInstalacion Automatica Instalacion de Java Google Colaboratory funciona en un ambiente linux, por lo tanto se pueden usar comandos shell de linux antecedidos del caracter \u0026lsquo;!\u0026rsquo;\n!apt-get install openjdk-8-jdk-headless -qq \u0026gt; /dev/null Instalacion de Spark Obtener automaticamente la ultima version de spark de\nfrom bs4 import BeautifulSoup import requests #Obtener las versiones de spark la pagina web url = \u0026#39;https://downloads.apache.org/spark/\u0026#39; r = requests.get(url) html_doc = r.text soup = BeautifulSoup(html_doc) # leer la pagina web y obtener las versiones de spark disponibles link_files = [] for link in soup.find_all(\u0026#39;a\u0026#39;): link_files.append(link.get(\u0026#39;href\u0026#39;)) spark_link = [x for x in link_files if \u0026#39;spark\u0026#39; in x] print(spark_link) [\u0026lsquo;spark-2.3.4/', \u0026lsquo;spark-2.4.5/', \u0026lsquo;spark-3.0.0-preview2/']\nLa version a usar seran las superiores a spark-2.3.4 y menores a spark-3.0.0\nobtener la version y eliminar el caracter \u0026lsquo;/\u0026rsquo; del final\nver_spark = spark_link[1][:-1] # obtener la version y eliminar el caracter \u0026#39;/\u0026#39; del final print(ver_spark) spark-2.4.5  import os # libreria de manejo del sistema operativo #instalar automaticamente la version deseadda de spark link = \u0026#34;https://www-us.apache.org/dist/spark/\u0026#34; os.system(f\u0026#34;wget -q {link}{ver_spark}/{ver_spark}-bin-hadoop2.7.tgz\u0026#34;) os.system(f\u0026#34;tar xf {ver_spark}-bin-hadoop2.7.tgz\u0026#34;) # instalar pyspark !pip install -q pyspark |████████████████████████████████| 217.8MB 63kB/s |████████████████████████████████| 204kB 53.8MB/s Building wheel for pyspark (setup.py) ... done  Definir variables de entorno os.environ[\u0026quot;JAVA_HOME\u0026quot;] = \u0026quot;/usr/lib/jvm/java-8-openjdk-amd64\u0026quot; os.environ[\u0026quot;SPARK_HOME\u0026quot;] = f\u0026quot;/content/{ver_spark}-bin-hadoop2.7\u0026quot; Cargar pyspark en el sistema from pyspark.sql import SparkSession spark = SparkSession.builder.appName(\u0026quot;Test_spark\u0026quot;).master(\u0026quot;local[*]\u0026quot;).getOrCreate() spark Ejemplo de Uso de pyspark Leer archivo de prueba\narchivo = './sample_data/california_housing_train.csv' df_spark = spark.read.csv(archivo, inferSchema=True, header=True) # imprimir tipo de archivo print(type(df_spark)) \u0026lt;class 'pyspark.sql.dataframe.DataFrame'\u0026gt;  ¿Numero de registros en el dataframe?\ndf_spark.count() 17000  Estructura del dataframe\ndf_spark.printSchema() root |-- longitude: double (nullable = true) |-- latitude: double (nullable = true) |-- housing_median_age: double (nullable = true) |-- total_rooms: double (nullable = true) |-- total_bedrooms: double (nullable = true) |-- population: double (nullable = true) |-- households: double (nullable = true) |-- median_income: double (nullable = true) |-- median_house_value: double (nullable = true)  ¿Nombre de las Columnas de dataframe?\ndf_spark.columns ['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income', 'median_house_value']  Ver los primeros 20 registros del dataframe\ndf_spark.show() +---------+--------+------------------+-----------+--------------+----------+----------+-------------+------------------+ |longitude|latitude|housing_median_age|total_rooms|total_bedrooms|population|households|median_income|median_house_value| +---------+--------+------------------+-----------+--------------+----------+----------+-------------+------------------+ | -114.31| 34.19| 15.0| 5612.0| 1283.0| 1015.0| 472.0| 1.4936| 66900.0| | -114.47| 34.4| 19.0| 7650.0| 1901.0| 1129.0| 463.0| 1.82| 80100.0| | -114.56| 33.69| 17.0| 720.0| 174.0| 333.0| 117.0| 1.6509| 85700.0| | -114.57| 33.64| 14.0| 1501.0| 337.0| 515.0| 226.0| 3.1917| 73400.0| | -114.57| 33.57| 20.0| 1454.0| 326.0| 624.0| 262.0| 1.925| 65500.0| | -114.58| 33.63| 29.0| 1387.0| 236.0| 671.0| 239.0| 3.3438| 74000.0| | -114.58| 33.61| 25.0| 2907.0| 680.0| 1841.0| 633.0| 2.6768| 82400.0| | -114.59| 34.83| 41.0| 812.0| 168.0| 375.0| 158.0| 1.7083| 48500.0| | -114.59| 33.61| 34.0| 4789.0| 1175.0| 3134.0| 1056.0| 2.1782| 58400.0| | -114.6| 34.83| 46.0| 1497.0| 309.0| 787.0| 271.0| 2.1908| 48100.0| | -114.6| 33.62| 16.0| 3741.0| 801.0| 2434.0| 824.0| 2.6797| 86500.0| | -114.6| 33.6| 21.0| 1988.0| 483.0| 1182.0| 437.0| 1.625| 62000.0| | -114.61| 34.84| 48.0| 1291.0| 248.0| 580.0| 211.0| 2.1571| 48600.0| | -114.61| 34.83| 31.0| 2478.0| 464.0| 1346.0| 479.0| 3.212| 70400.0| | -114.63| 32.76| 15.0| 1448.0| 378.0| 949.0| 300.0| 0.8585| 45000.0| | -114.65| 34.89| 17.0| 2556.0| 587.0| 1005.0| 401.0| 1.6991| 69100.0| | -114.65| 33.6| 28.0| 1678.0| 322.0| 666.0| 256.0| 2.9653| 94900.0| | -114.65| 32.79| 21.0| 44.0| 33.0| 64.0| 27.0| 0.8571| 25000.0| | -114.66| 32.74| 17.0| 1388.0| 386.0| 775.0| 320.0| 1.2049| 44000.0| | -114.67| 33.92| 17.0| 97.0| 24.0| 29.0| 15.0| 1.2656| 27500.0| +---------+--------+------------------+-----------+--------------+----------+----------+-------------+------------------+ only showing top 20 rows  Descricipcion Estadistica del dataframe df_spark.describe().toPandas().transpose()     0 1 2 3 4     summary count mean stddev min max   longitude 17000 -119.56210823529375 2.0051664084260357 -124.35 -114.31   latitude 17000 35.6252247058827 2.1373397946570867 32.54 41.95   housing_median_age 17000 28.58935294117647 12.586936981660406 1.0 52.0   total_rooms 17000 2643.664411764706 2179.947071452777 2.0 37937.0   total_bedrooms 17000 539.4108235294118 421.4994515798648 1.0 6445.0   population 17000 1429.5739411764705 1147.852959159527 3.0 35682.0   households 17000 501.2219411764706 384.5208408559016 1.0 6082.0   median_income 17000 3.883578100000021 1.9081565183791036 0.4999 15.0001   median_house_value 17000 207300.91235294117 115983.76438720895 14999.0 500001.0    Descripcion estadistica de una sola columna (\u0026lsquo;median_house_value\u0026rsquo;)\ndf_spark.describe([\u0026#39;median_house_value\u0026#39;]).show() +-------+------------------+ |summary|median_house_value| +-------+------------------+ | count| 17000| | mean|207300.91235294117| | stddev|115983.76438720895| | min| 14999.0| | max| 500001.0| +-------+------------------+  De esta forma se puede instalar automaticamente spark en google colab y hacer uno de el de forma gratis.\nEn la version gratis solo se cuenta con una CPU si se quiere aumentar la capacidad de procesamiento es necesario pagar.\n","date":1583812843,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1583812843,"objectID":"0ab34644955db890c3be41e87603ffaf","permalink":"https://joserzapata.github.io/es/post/pyspark-google-colab/","publishdate":"2020-03-09T23:00:43-05:00","relpermalink":"/es/post/pyspark-google-colab/","section":"post","summary":"Configuracion de Google Colab para usar pyspark","tags":["Python","Pyspark","Colab","Data-Science"],"title":"Pyspark con Google Colab","type":"post"},{"authors":["Jose R. Zapata"],"categories":null,"content":"","date":1581096900,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1581096900,"objectID":"314df99d0ecc97f9bfb77f82b143b541","permalink":"https://joserzapata.github.io/es/talk/pycon2020/","publishdate":"2020-02-07T21:12:33-05:00","relpermalink":"/es/talk/pycon2020/","section":"talk","summary":"Python para demostrar y visualizar la naturaleza de las ondas del sonido, la relación entre diferentes notas y como se unen para crear la Armonía Musical desde la Física y la Matemática","tags":["Python","Jupyter-notebook","Music","Waves"],"title":"Comprensión de la música con Python, una mirada desde la Física y la Matemática","type":"talk"},{"authors":[],"categories":[],"content":"","date":1563220869,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1563220869,"objectID":"b6545793ef267683c42022143affe8b3","permalink":"https://joserzapata.github.io/es/project/acmus/","publishdate":"2019-07-15T15:01:09-05:00","relpermalink":"/es/project/acmus/","section":"project","summary":"El proyecto ACMus explora el uso de técnicas de aprendizaje automático para musicología computacional, gestión de archivos de música digital y recuperación de información musical. Dos elementos principales del proyecto son: 1. Énfasis en técnicas de aprendizaje automático semi-supervisadas y no supervisadas que dependen mínimamente de la disponibilidad de datos anotados para una tarea específica. 2. La música tradicional colombiana como foco principal de nuestro estudio.","tags":["Music-information-retrieval","Musicology","Beat-tracking"],"title":"Acmus","type":"project"},{"authors":["Jose R. Zapata"],"categories":null,"content":"","date":1538521200,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1538521200,"objectID":"3da123f049e1b5f93cd320fa2bf4fccb","permalink":"https://joserzapata.github.io/es/talk/meetup_2018/","publishdate":"2019-11-25T22:07:22-05:00","relpermalink":"/es/talk/meetup_2018/","section":"talk","summary":"Mediante la extraccion automatica del contenido de las señales de audio y Machine learning se tienen aplicaciones de predicción, clasificación y Agrupamiento, como: Deteccion de emociones en la voz (Speech Emotion), Reconocieminto de Voz (Speech-to-Text), Deteccion y segmentacion de personas hablando(Speaker Diarization), Music Information Retrieval (Extraccion Automatica de Informacion Musical), entre otros.","tags":["Python","Music-information-retrieval","Machine-learning","Data-science"],"title":"Aplicaciones de Audio con Machine Learning","type":"talk"},{"authors":["Jose R. Zapata"],"categories":null,"content":"","date":1518194435,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1518194435,"objectID":"765bb230bfa95f670be32a5ef0b37bb1","permalink":"https://joserzapata.github.io/es/talk/pycon2018/","publishdate":"2019-11-25T17:09:35-05:00","relpermalink":"/es/talk/pycon2018/","section":"talk","summary":"Uso de Python para Analisis de señales de Audio y Aplicaciones de Music Information Retrieval (Extraccion Automatica de informacion Musical).","tags":["Music-information-retrieval","Python"],"title":"Analisis de Señales de Audio con Python","type":"talk"},{"authors":["Jose R. Zapata"],"categories":[],"content":"","date":1479424445,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1479424445,"objectID":"e27342eb41f7b23196a6aa49f2f702ba","permalink":"https://joserzapata.github.io/es/publication/tempo-estimation/","publishdate":"2019-10-19T07:52:23-05:00","relpermalink":"/es/publication/tempo-estimation/","section":"publication","summary":"","tags":["Tempo"],"title":"Tempo Estimation","type":"publication"},{"authors":["Jose R. Zapata"],"categories":null,"content":"","date":1469214000,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1469214000,"objectID":"5c213eaf4ea864ae4a254a56dfa79204","permalink":"https://joserzapata.github.io/es/talk/aes2016/","publishdate":"2019-11-25T21:42:28-05:00","relpermalink":"/es/talk/aes2016/","section":"talk","summary":"El Music Information Retrieval (MIR), que tiene como objetivo extraer, analizar y procesar automaticamente la informacion musical en señales de audio para diferentes aplicaciones musicales e informaticas. Las principales tareas en MIR, son Beat tracking, deteccion de melodia, deteccion de acordes, fingerprinting, recomendacion de música, procesamiento de señales de audio, entre otras aplicaciones","tags":["Music-information-retrieval","Python"],"title":"Sistemas Automaticos para Extraccion de Información Musical (Generalidades y Aplicaciones)","type":"talk"},{"authors":["Jose R. Zapata","Matthew E.P. Davies","Emilia Gómez"],"categories":[],"content":"","date":1396543937,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1396543937,"objectID":"3b89439c94c277af830c85d968bae75c","permalink":"https://joserzapata.github.io/es/publication/multifeature-beattracker/","publishdate":"2019-10-19T07:03:59-05:00","relpermalink":"/es/publication/multifeature-beattracker/","section":"publication","summary":"","tags":["Beat-tracking","Confidence-measure","IEEE"],"title":"Multi-Feature Beat Tracking","type":"publication"},{"authors":[],"categories":[],"content":"","date":1388894438,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1388894438,"objectID":"f740bcb76b81f488e70bad46459faf14","permalink":"https://joserzapata.github.io/es/project/multifeature-beat-tracker/","publishdate":"2014-01-04T23:00:38-05:00","relpermalink":"/es/project/multifeature-beat-tracker/","section":"project","summary":"Implementacion en Matlab del Multi Feature Beat Tracker (Information Gain and Regularity),el beat tracker de essentia, mas detalles en [Multi-Feature Beat Tracking](https://joserzapata.github.io/publication/multifeaturebeattracker/)","tags":["Beat-tracking","Essentia","Matlab","Mirex"],"title":"Multifeature Beat tracker","type":"project"},{"authors":[],"categories":[],"content":"","date":1385210712,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1385210712,"objectID":"ae28bdb513faa73c235bc5ea7467f50e","permalink":"https://joserzapata.github.io/es/project/essentia/","publishdate":"2013-11-23T07:45:12-05:00","relpermalink":"/es/project/essentia/","section":"project","summary":"Essentia es una libreria en C++ de código abierto para análisis de audio y recuperación de información de música basada en audio. Contiene una amplia colección de algoritmos reutilizables que implementan la funcionalidad de entrada / salida de audio, bloques de procesamiento de señal digital estándar, caracterización estadística de datos y un amplio conjunto de descriptores de música espectrales, temporales, tonales y de alto nivel. Más detalles en este [articulo](https://joserzapata.github.io/publication/essentia-ismir/)","tags":["Essentia","Beat-tracking","Python","Open-source"],"title":"Essentia","type":"project"},{"authors":["Dmitry Bogdanov","Nicolas Wack","Emilia Gómez","Sankalp Gulati","Perfecto Herrera","Oscar Mayor","Gerard Roma","Justin Salamon","Jose R. Zapata","Xavier Serra"],"categories":[],"content":"","date":1383539573,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1383539573,"objectID":"b2f301b98e01a2b1c2ef517e6e72334f","permalink":"https://joserzapata.github.io/es/publication/essentia-ismir/","publishdate":"2019-10-19T06:54:49-05:00","relpermalink":"/es/publication/essentia-ismir/","section":"publication","summary":"","tags":["Essentia","Beat-tracking","Music-information-retrieval","Python","ISMIR","Open-source"],"title":"Essentia: An Audio Analysis Library for Music Information Retrieval","type":"publication"},{"authors":["Dmitry Bogdanov","Nicolas Wack","Emilia Gómez","Sankalp Gulati","Perfecto Herrera","Oscar Mayor","Gerard Roma","Justin Salamon","Jose R. Zapata","Xavier Serra"],"categories":[],"content":"","date":1382332295,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1382332295,"objectID":"266fc3e7075adaa401902b92b429edba","permalink":"https://joserzapata.github.io/es/publication/essentia-acm/","publishdate":"2019-10-19T06:49:16-05:00","relpermalink":"/es/publication/essentia-acm/","section":"publication","summary":"","tags":["Essentia","Beat-tracking","Music-information-retrieval","Python","ACM","Open-source"],"title":"Essentia: an open-source library for sound and music analysis","type":"publication"},{"authors":["Jose R. Zapata"],"categories":[],"content":"","date":1379080190,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1379080190,"objectID":"3bbaff791be1d67f99d1269bde41adc9","permalink":"https://joserzapata.github.io/es/publication/phd-thesis/","publishdate":"2013-09-13T14:49:50+01:00","relpermalink":"/es/publication/phd-thesis/","section":"publication","summary":"nuevo método para la extracción de beats en señales de audio que mide el grado de confianza de la estimación, basado en la medición del grado de similitud entre un comité de sistemas de detección de beats.","tags":["Beat-tracking","Tempo","Comparative-evaluation","Phd"],"title":"Comparative evaluation and combination of automatic rhythm description systems","type":"publication"},{"authors":null,"categories":null,"content":"Comparative evaluation and combination of automatic rhythm description systems Zapata, Jose R. (2013). Comparative evaluation and combination of automatic rhythm description systems. Ph.D. thesis (Information and Communication Technologies), Universitat Pompeu Fabra, Barcelona, Spain, 2013.\n [TDX.cat] [PDF] [MTG] [Presentacion]  Director de Tesis  Dr. Emilia Gómez, Universitat Pompeu Fabra (MTG, UPF)  Jurado de Defensa  Dr. Xavier Serra, Universitat Pompeu Fabra (MTG, UPF) Dr. Fabien Gouyon, Institute for Systems and Computer Engineering of Porto (SMC, INESC Porto) Dr. Juan Pablo Bello, New York University (MARL, NYU)  Resumen El análisis automático musical del ritmo en audio, y más concretamente el tempo y la detección de beats (Beat tracking), es uno de los problemas fundamentales en recuperación de información de Musical (MIR). La detección automática de beat es una valiosa herramienta para la solución de otros problemas de MIR, ya que permite el análisis sincronizado de la música con los beats para otras tareas. Describimos un nuevo método para la extracción de beats en señales de audio que mide el grado de confianza de la estimación, basado en la medición del grado de similitud entre un comité de sistemas de detección de beats. Este método automático se puede utilizar también para identificar canciones que son difíciles para la detección de beats. También realizamos una extensa evaluación comparativa de los sistemas actuales de descripción automática ritmo. Para esto, Evaluamos 32 algoritmos de tempo y 16 sistemas de detección de beats. (La tesis de PhD esta escrita en Ingles)\n","date":1379030400,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1379030400,"objectID":"a5b0a930c95b729922bbf991c678c31e","permalink":"https://joserzapata.github.io/es/phd/","publishdate":"2013-09-13T00:00:00Z","relpermalink":"/es/phd/","section":"","summary":"Comparative evaluation and combination of automatic rhythm description systems","tags":null,"title":"Phd Tesis","type":"page"},{"authors":["Jose R. Zapata","Emilia Gómez"],"categories":[],"content":"","date":1369590165,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1369590165,"objectID":"2c227655fdc88a1d4b7bb84bd11157dc","permalink":"https://joserzapata.github.io/es/publication/voice-suppression-improve-beat-tracking/","publishdate":"2019-10-19T08:04:57-05:00","relpermalink":"/es/publication/voice-suppression-improve-beat-tracking/","section":"publication","summary":"","tags":["Beat-tracking","Source-separation","ICASSP","IEEE"],"title":"Using voice suppression algorithms to improve beat tracking in the presence of highly predominant vocals","type":"publication"},{"authors":["Andre Holzapfel","Matthew EP Davies","Jose R. Zapata","João Lobato Oliveira","Fabien Gouyon"],"categories":[],"content":"","date":1351962965,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1351962965,"objectID":"e70c170c3be55d89c3d164fb571decb6","permalink":"https://joserzapata.github.io/es/publication/selective-sampling-beat-tracking/","publishdate":"2019-10-19T07:16:58-05:00","relpermalink":"/es/publication/selective-sampling-beat-tracking/","section":"publication","summary":"","tags":["Beat-tracking","Selective-sampling","IEEE"],"title":"Selective Sampling for Beat Tracking Evaluation","type":"publication"},{"authors":["Jose R. Zapata","Matthew EP Davies","Andre Holzapfel","João Lobato Oliveira","Fabien Gouyon"],"categories":[],"content":"","date":1349743136,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1349743136,"objectID":"d1994bb3c7f67f1de178f42e0396ed2d","permalink":"https://joserzapata.github.io/es/publication/assigning-confidence/","publishdate":"2019-10-19T06:04:58-05:00","relpermalink":"/es/publication/assigning-confidence/","section":"publication","summary":"","tags":["Beat-tracking","Confidence-measure","ISMIR"],"title":"Assigning a confidence threshold on automatic beat annotation in large datasets","type":"publication"},{"authors":["Jose R. Zapata","Emilia Gómez"],"categories":[],"content":"","date":1340939862,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1340939862,"objectID":"8dbfa88e363fc9f2218f042feb3f4b47","permalink":"https://joserzapata.github.io/es/publication/improving-beat-tracking/","publishdate":"2019-10-19T06:58:59-05:00","relpermalink":"/es/publication/improving-beat-tracking/","section":"publication","summary":"","tags":["Beat-tracking","Source-separation","CMMR"],"title":"Improving Beat Tracking in the presence of highly predominant vocals using source separation techniques: Preliminary study","type":"publication"},{"authors":[],"categories":[],"content":"","date":1338143413,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1338143413,"objectID":"fc5dbad770fbd8b3b7e8be1d0746d834","permalink":"https://joserzapata.github.io/es/project/smc-beat-tracker-dataset/","publishdate":"2012-05-27T13:30:13-05:00","relpermalink":"/es/project/smc-beat-tracker-dataset/","section":"project","summary":"Este dataset de Beat tracking contiene 217 fragmentos de aproximadamente 40 seg cada uno, de los cuales 19 son *fáciles* y los 198 restantes son *dificiles*. Este conjunto de datos ha sido diseñado para técnicas radicalmente nuevas que pueden lidiar con desafiantes situaciones de beat tracking como: acompañamiento suave, tiempo expresivo, cambios de compás, tempo lento, calidad de sonido pobre, etc. Más detalles en [Selective Sampling for Beat Tracking Evaluation](https://joserzapata.github.io/publication/selectivesampling/)","tags":["Beat-tracking","Dataset","Mirex","Open-source"],"title":"SMC Beat tracking Dataset","type":"project"},{"authors":["Andre Holzapfel","Matthew EP Davies","Jose R. Zapata","João Lobato Oliveira","Fabien Gouyon"],"categories":[],"content":"","date":1332722673,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1332722673,"objectID":"09b7f7f1c4f9e866e31a23eb77383ce8","permalink":"https://joserzapata.github.io/es/publication/automatic-identification/","publishdate":"2019-10-19T06:21:05-05:00","relpermalink":"/es/publication/automatic-identification/","section":"publication","summary":"","tags":["Beat-tracking","Selective-sampling","ICASSP","IEEE"],"title":"On the automatic identification of difficult examples for beat tracking: towards building new evaluation datasets","type":"publication"},{"authors":["Jose R. Zapata","Emilia Gómez"],"categories":[],"content":"","date":1311356015,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1311356015,"objectID":"29692cec3e93b1c622f0e22c687464e8","permalink":"https://joserzapata.github.io/es/publication/comparative-tempo/","publishdate":"2019-10-19T06:25:51-05:00","relpermalink":"/es/publication/comparative-tempo/","section":"publication","summary":"","tags":["Tempo","Comparative-evaluation","AES","Python"],"title":"Comparative Evaluation and Combination of Audio Tempo Estimation Approaches","type":"publication"},{"authors":["Jose R. Zapata","Ricardo A. Garcia"],"categories":[],"content":"","date":1222918493,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1222918493,"objectID":"bce0a52c36fdd4243279b6e0d92aa98d","permalink":"https://joserzapata.github.io/es/publication/efficient-detection/","publishdate":"2019-10-19T06:44:00-05:00","relpermalink":"/es/publication/efficient-detection/","section":"publication","summary":"","tags":["Audio-redundancy","AES"],"title":"Efficient Detection of Exact Redundancies in Audio Signals","type":"publication"},{"authors":["Jose R. Zapata","Tony Peñarredonda"],"categories":[],"content":"","date":1090780824,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1090780824,"objectID":"91b2e9159822a7089832be91b361afb0","permalink":"https://joserzapata.github.io/es/publication/control-rango-dinamico/","publishdate":"2019-11-14T13:40:24-05:00","relpermalink":"/es/publication/control-rango-dinamico/","section":"publication","summary":"","tags":["Fuzzy-logic","Dynamic-range-compression"],"title":"Control de Rango Dinamico en Audio con Logica Difusa","type":"publication"}]